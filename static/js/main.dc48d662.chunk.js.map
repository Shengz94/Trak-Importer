{"version":3,"sources":["Helper/Helper.js","components/ImportFromList.js","components/TitleImportCard.js","Helper/TraktAPI.js","components/ImportToTrakt.js","components/Login.js","components/Result.js","components/TopBar.js","components/Gateway.js","index.js"],"names":["isNull","variable","undefined","withRouter","props","useState","file","setFile","type","onChange","e","preventDefault","target","files","browseFile","Button","disabled","onClick","reader","FileReader","onload","source","result","split","titles","Map","forEach","element","title","id","uuidv4","sourceTitle","traktTitle","selected","import","set","populateTitles","history","push","readAsText","TitleImport","className","checked","handleImportCheckBox","value","JSON","stringify","handleSelectedChange","map","year","TRAKT_API_KEY","TRAKT_DOMAIN","TRAKT_REDIRECT_URI","searchForTitle","endpoint","encodeURI","fetch","headers","method","then","response","json","data","current","movie","show","entry","ids","trakt","slug","addToHistory","token","itemType","item","params","body","added","movies","episodes","notFound","shows","seasons","not_found","getUserInfo","username","user","name","uuid","image","images","avatar","full","ready","setReady","titleArray","setTitleArray","a","requests","tempElement","Promise","allSettled","updateTitles","values","userToken","resolve","setTimeout","tempLog","console","log","fillLog","useEffect","populateTrakTitle","length","size","TitleImportCard","updateTitle","uri","variant","window","location","href","Result","line","indexOf","linkAr","link","textAr","text","linkText","Math","random","renderLog","TopBar","src","logout","Gateway","setTitles","setLog","setUser","localStorage","getItem","setUserToken","newTitle","tempTitles","idx","tempTitle","get","parse","status","setItem","code","URLSearchParams","search","append","header","access_token","expireIn","expires_in","refreshToken","refresh_token","created_at","getToken","removeItem","basename","process","exact","path","to","input","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc48d662.chunk.js","sourcesContent":["\nfunction isNull(variable){\n    return variable === \"undefined\" || variable === \"null\" \n    || variable === \"\" || typeof variable === \"undefined\"\n    || variable === undefined || variable === null;\n}\n\nexport default isNull;","import React, {useState, useEffect} from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport isNull from \"../Helper/Helper\";\nimport { withRouter } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ImportFromList = (props) => {\n  const [file, setFile] = useState();\n\n  function browseFile (e) {\n    e.preventDefault();\n    setFile(e.target.files[0]);\n  }  \n  function processFile(){\n    const reader = new FileReader();\n    reader.onload = (e) => { \n      const source = e.target.result.split(\"\\n\");\n      var titles = new Map();\n      source.forEach(element => {\n        if(!isNull(element)){\n          var title = {\n            id: uuidv4(),\n            sourceTitle: element,\n            traktTitle: [],\n            selected: {},\n            import: true\n          }\n          titles.set(title.id, title);\n        }\n      });\n      props.populateTitles(titles)\n      props.history.push(\"Import-Trakt\");\n    };\n    reader.readAsText(file);\n  }\n\n  return (\n    <div>\n      <input type=\"file\" onChange={(e) => browseFile(e)} />\n      <Button disabled={isNull(file)} onClick={processFile}>Process titles</Button>\n    </div>\n  );\n};\n\nexport default withRouter(ImportFromList);","import React, {Fragment}  from \"react\";\nimport isNull from \"../Helper/Helper\";\n\nconst TitleImport = (props) => {\n  \n  return (\n    <div className=\"title-import-card\">\n      <div className=\"checkbox-import\">\n        <input type=\"checkbox\" checked={props.title.import} onChange={() => props.handleImportCheckBox(props.title.id)} />\n      </div>\n      <div className=\"source-name\">\n        <span>Input title: {props.title.sourceTitle}</span>\n      </div>\n      <div className=\"trakt-title\">\n        {!isNull(props.title.selected) ?\n          <label>\n            Trakt title:\n            <select \n              value={!isNull(props.title.selected) ? JSON.stringify(props.title.selected) : \"\"} \n              onChange={(e) => props.handleSelectedChange(props.title.id, e.target.value)}>\n                {props.title.traktTitle.map((element) => {\n                  return <option key={element.id} value={JSON.stringify(element)}>\n                      {\"Trakt ID \" + element.id + \": \" + element.title + \" - \" + element.year \n                      + \" (\" + element.type + \")\"}\n                    </option>\n                })}\n            </select>\n          </label>\n          :\n          <span>No title found on Trakt</span>\n        }\n      </div>\n    </div>    \n  );\n};\n\nexport default TitleImport;","const TRAKT_API_KEY = \"3f2a4833bca232c1afbb66c2a56447e7d75b44372af9d45f11cf0b907b326b92\";\nconst TRAKT_API_SECRET = \"ea9ac4d176818616f44dc3a3d643cf73569590ae0c055d2dc190023d9762ea81\";\nconst TRAKT_DOMAIN = \"https://api.trakt.tv/\";\nconst TRAKT_SEARCH = \"search/movie,show?query=\";\nconst TRAKT_ADD = \"sync/history/\";\nconst TRAKT_REMOVE = \"sync/history/remove/\";\nconst TRAKT_AUTHORIZE = \"oauth/authorize/\";\nconst TRAKT_GET_TOKEN = \"oauth/token/\";\nconst TRAKT_USER_INFO = \"users/settings/\";\nconst TRAKT_REDIRECT_URI = \"https://shengz94.github.io/trakt-history-importer/\";\nconst TRAKT_REDIRECT_URI1 = \"http://localhost:3000/\";\n\nfunction getAuthenticationURI(){\n    return TRAKT_DOMAIN + TRAKT_AUTHORIZE + \"?client_id=\" + TRAKT_API_KEY \n    + \"&redirect_uri=\" + encodeURI(TRAKT_REDIRECT_URI) + \"&response_type=code\";\n}\n\nfunction getToken(code){\n    let endpoint = TRAKT_DOMAIN + TRAKT_GET_TOKEN;\n\n    const body = new URLSearchParams();\n    body.append(\"code\", code);\n    body.append(\"client_id\", TRAKT_API_KEY);\n    body.append(\"client_secret\", TRAKT_API_SECRET);\n    body.append(\"redirect_uri\", TRAKT_REDIRECT_URI);\n    body.append(\"grant_type\", \"authorization_code\");\n    let params = {\n        header:{\n            \"Content-Type\": \"application/json\"\n        },\n        body: body,\n        method: \"post\"\n    };\n    return fetch(endpoint, params).then((response) => {\n        return response.json();\n    }).then((data) => {\n        var result = {\n            access_token: data.access_token,\n            expireIn: data.expires_in,\n            refreshToken: data.refresh_token,\n            created_at: data.created_at\n        };\n\n        return result;\n    });\n\n}\n\nfunction checkToken(){\n    //check if token is stored in web storage, if not, return false\n}\n\nfunction searchForTitle(title){\n    let endpoint = TRAKT_DOMAIN + TRAKT_SEARCH + encodeURI(title);\n    let params = {\n        headers:{\n            \"Content-Type\": \"application/json\",\n            \"trakt-api-key\": TRAKT_API_KEY,\n            \"trakt-api-version\": \"2\"\n        },\n        method: \"get\"\n    };\n\n    return fetch(endpoint, params).then((response) => {\n        return response.json();\n    }).then((data) => {\n\n        var result = [];\n\n        data.forEach(element => {\n            var current = element.type === \"movie\" ? element.movie : element.show;\n            var entry = {\n                type: element.type,\n                title: current.title,\n                year: current.year,\n                id: current.ids.trakt,\n                slug: current.ids.slug\n            }\n            result.push(entry);\n        });\n\n        return result;\n    });\n}\n\nfunction addToHistory(id, type, token){\n    let itemType = type + \"s\";\n    let endpoint = TRAKT_DOMAIN + TRAKT_ADD;\n\n    const item = {\n        [itemType]: [{\n            \"ids\":{\n                \"trakt\":id\n            }\n        }]\n    };\n    let params = {\n        headers:{\n            \"Content-Type\": \"application/json\",\n            \"trakt-api-key\": TRAKT_API_KEY,\n            \"trakt-api-version\": \"2\",\n            \"Authorization\": \"Bearer \" + token\n        },\n        body: JSON.stringify(item),\n        method: \"post\"\n    };\n\n    return fetch(endpoint, params).then((response) => {\n        return response.json();\n    }).then((data) => {\n        var result = {\n            added:{\n                movies: data.added.movies,\n                episodes: data.added.episodes\n            },\n            notFound: {\n                movies: [],\n                shows: [],\n                seasons: [],\n                episodes: []\n            }\n        };\n        data.not_found.movies.forEach(element => {\n            result.notFound.movies.push(element);\n        });\n        data.not_found.shows.forEach(element => {\n            result.notFound.shows.push(element);\n        });\n        data.not_found.seasons.forEach(element => {\n            result.notFound.seasons.push(element);\n        });\n        data.not_found.episodes.forEach(element => {\n            result.notFound.episodes.push(element);\n        });\n        return result;\n    });\n}\n\nfunction getUserInfo(token){\n    let endpoint = TRAKT_DOMAIN + TRAKT_USER_INFO;\n    let params = {\n        headers:{\n            \"Content-Type\": \"application/json\",\n            \"trakt-api-key\": TRAKT_API_KEY,\n            \"trakt-api-version\": \"2\",\n            \"Authorization\": \"Bearer \" + token\n        },\n        method:\"get\"\n    };\n\n    return fetch(endpoint, params).then((response) => {\n        return response.json();\n    }).then((data) => {\n        var user = {\n            username: data.user.username,\n            name: data.user.name,\n            uuid: data.user.ids.uuid,\n            slug: data.user.ids.slug,\n            image: data.user.images.avatar.full,\n        }\n\n        return user;\n    });\n}\n\n\n\nexport {getAuthenticationURI, getToken, searchForTitle, addToHistory, getUserInfo}","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Button } from \"@material-ui/core\"\nimport { withRouter } from \"react-router-dom\";\nimport TitleImportCard from \"./TitleImportCard\";\nimport isNull from \"../Helper/Helper\";\nimport {addToHistory, searchForTitle} from \"../Helper/TraktAPI\"\n\nconst ImportToTrakt = (props) => {\n  const [ready, setReady] = useState(false);\n  const [titleArray, setTitleArray] = useState();\n\n  useEffect(() => {\n    populateTrakTitle();\n  }, []);\n\n  useEffect(() => {\n    setTitleArray([...props.titles.values()])\n  }, [props.titles]);\n\n  useEffect(() => {\n    if(!isNull(titleArray) && titleArray.length >= 0){\n      setReady(true);\n    }\n  }, [titleArray])\n\n  async function populateTrakTitle(){\n    var requests = []\n    props.titles.forEach(element => {\n      var tempElement = element;\n      requests.push(searchForTitle(tempElement.sourceTitle));\n    });\n    await Promise.allSettled(requests).then(data =>{\n      props.updateTitles(data);\n    });\n  }\n\n  async function importTitles(){\n    if(!isNull(props.titles)){\n      var requests =[];\n      var tempLog;\n\n      //props.titles.forEach(async element => \n      for(const element of props.titles.values()){\n        if(element.import && !isNull(element.selected) && !isNull(element.selected.id)){                     \n          requests.push(addToHistory(element.selected.id, element.selected.type, props.userToken));\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      };\n      await Promise.allSettled(requests).then(data =>{\n        if(!isNull(data)){\n          tempLog = data;\n        }\n      });\n      console.log(tempLog)\n      props.fillLog(tempLog);\n      props.history.push(\"/Result\");\n    }\n  }\n\n  if(isNull(props.titles) || props.titles.size <= 0){\n    props.history.push(\"home\");\n  }\n\n  return (\n    <div className=\"title-list\">\n      {ready  && !isNull(props.titles)?\n        <Fragment>\n          {titleArray.map(title =>  \n            <TitleImportCard key={title.id} \n              title={title} updateTitle={props.updateTitle} \n              handleImportCheckBox={props.handleImportCheckBox} \n              handleSelectedChange={props.handleSelectedChange}\n            />\n          )}\n          <Button onClick={importTitles}>Import titles</Button>\n        </Fragment>\n        :\n        <Fragment/>\n      }   \n    </div>\n  );\n};\n\nexport default withRouter(ImportToTrakt);","import React from \"react\";\nimport {getAuthenticationURI} from \"../Helper/TraktAPI\";\nimport { Button } from \"@material-ui/core\";\nimport { withRouter} from \"react-router-dom\";\n\nconst Login = (props) => {\n\n    const uri = getAuthenticationURI();\n    \n    function goToAutheticationPage(){\n        window.location.href = uri;\n    }\n\n\n    return (\n        <div>\n            <Button size=\"small\" variant=\"contained\" onClick={goToAutheticationPage}>Log in</Button>\n        </div>\n    );\n};\n\nexport default withRouter(Login);","import React, {Fragment, useEffect, useState}  from \"react\";\nimport isNull from \"../Helper/Helper\";\n\nconst Result = (props) => {\n  const [ready, setReady] = useState(false);\n\n  useEffect(() =>{\n      if(!isNull(props.log) && props.log.length > 0){\n        setReady(true);\n      }\n  }, [props.log])\n\n  function renderLog(line){\n    if(line.indexOf(\"///end///\") > 0){\n      const linkAr = line.split(\"///end///\");\n      const link = linkAr[1];\n      const textAr = linkAr[0].split(\"///startTitle///\");\n      const text = textAr[0]\n      const linkText = textAr[1];\n      return <p key={Math.random()}>{text} <a href={link}>{linkText}</a> </p>\n    }\n    return line;\n  }\n\n  return (\n    <div className=\"result-view\">\n      <div className=\"log\">\n        {props.log.map(line => renderLog(line))}\n      </div>\n    </div>\n  );\n};\n\nexport default Result;","import React, {Fragment}  from \"react\";\nimport { Button } from \"@material-ui/core\"\nimport isNull from \"../Helper/Helper\";\n\nconst TopBar = (props) => {\n\n  return (\n    <div className=\"top-bar\">\n        {isNull(props.user) ?\n            <Fragment></Fragment>\n            :\n            <div className=\"user-info\">\n                <div className=\"user-avatar\">\n                    <img src={props.user.image}/>\n                </div>\n                <div className=\"user-name\">\n                    <span>{props.user.username}</span>\n                </div>\n                <div className=\"logout\">\n                    <Button onClick={props.logout}>Log out</Button>\n                </div>\n            </div>\n        }\n    </div>\n  );\n};\n\nexport default TopBar;","import React, {Fragment, useEffect, useState}  from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport ImportFromList from \"./ImportFromList\";\nimport ImportToTrakt from \"./ImportToTrakt\";\nimport Login from \"./Login\";\nimport Result from \"./Result\";\nimport {getToken, getUserInfo} from \"../Helper/TraktAPI\";\nimport isNull from \"../Helper/Helper\";\nimport TopBar from \"./TopBar\";\n\nconst Gateway = (props) => {\n  const [titles, setTitles] = useState(new Map());\n  const [log, setLog] = useState([]);\n  const [user, setUser] = useState();\n  const [userToken, setUserToken] = useState(localStorage.getItem(\"userToken\"));\n\n\n  useEffect(() => {\n    localStorage.setItem(\"userToken\", userToken);\n  }, [userToken]);\n\n  useEffect(() => {\n    console.log(\"User Token: \" + userToken);\n    if(isNull(userToken)){\n      let params = new URLSearchParams(window.location.search);\n      let code = params.get(\"code\");\n      console.log(\"User code: \" + code);\n      if(!isNull(code)){\n        getToken(code).then((data) => {\n          setUserToken(data.access_token);\n\n          getUserInfo(data.access_token).then((data) => {\n            setUser(data);\n          });\n        });\n      }\n    }\n    else{\n      getUserInfo(userToken).then((data) => {\n        setUser(data);\n      });\n    }\n  }, []);\n\n  function logout(){\n    localStorage.removeItem(\"userToken\");\n    setUser(undefined);\n  }\n\n  function populateTitles(input){\n    setTitles(input);\n  }\n\n  function updateTitle(id, newTitle){\n    var tempTitles = new Map(titles);\n    tempTitles.set(id, newTitle);\n    setTitles(tempTitles);\n  }\n\n  function updateTitles(data){\n    var tempTitles = new Map(titles);\n    let idx = 0;\n    tempTitles.forEach(element => {\n      element.traktTitle = data[idx].value;\n      if(!isNull(data[idx])){\n        element.selected = data[idx].value[0];\n      }\n      idx++;\n    });\n    setTitles(tempTitles)\n  }\n\n  function handleSelectedChange(id, title){\n    var tempTitle = titles.get(id);\n    tempTitle.selected = JSON.parse(title);\n    updateTitle(id, tempTitle);\n  }\n\n  function handleImportCheckBox(id){\n    var tempTitle = titles.get(id);\n    tempTitle.import = !tempTitle.import;\n    updateTitle(id, tempTitle);\n  }\n\n  function fillLog(data){\n    let idx = 0;\n    var tempLog = [];\n    titles.forEach( title => {\n      let result = \"-\";\n      if(title.import){\n        if(!isNull(title.selected)){\n          console.log(data)\n          if(!isNull(data[idx]) && data[idx].status === \"fulfilled\" && (\n          (title.selected.type === \"movie\" && data[idx].value.added.movies > 0)\n          || (title.selected.type === \"show\" && data[idx].value.added.episodes > 0))){\n            result = title.sourceTitle + \" imported to Trakt as ///startTitle///\" + title.selected.title \n            + \" - \" + title.selected.year + \"(\" + title.selected.type \n            + \") (ID:\" + title.selected.id + \"). ///end///https://trakt.tv/\" + title.selected.type + \"s/\" + title.selected.slug;\n          }\n          else{\n            result = \"There were a problem importing \" + title.sourceTitle + \" to Trakt. \";\n          }\n        }\n        else{\n          result = title.sourceTitle + \" NOT found in Trakt. \"; \n        }\n      }\n      else{\n        result = title.sourceTitle + \" NOT imported to Trakt. \"\n      }\n      idx++;\n      tempLog.push(result);\n    });\n    setLog(tempLog);\n  }\n\n  return (\n    <Fragment>\n      <TopBar user={user} logout={logout}/>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\"> \n            {!isNull(userToken) ? <Redirect to=\"Home\"/> : <Login/>}\n          </Route>\n          <Route exact path=\"/Home\">\n            <ImportFromList populateTitles={(input) => populateTitles(input)}/>\n          </Route>\n          <Route exact path=\"/Import-Trakt\" render={() => (\n            <ImportToTrakt titles={titles} userToken={userToken} log={log}\n              updateTitles={updateTitles} fillLog={fillLog}\n              handleSelectedChange={handleSelectedChange}\n              handleImportCheckBox={handleImportCheckBox}\n            />\n          )}/>\n          <Route exact path=\"/Result\" render={() => (\n            <Result log={log} />\n          )}/>\n        </Switch>\n      </BrowserRouter>\n    </Fragment>\n  );\n};\n\nexport default Gateway;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Gateway from './components/Gateway';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Gateway />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}